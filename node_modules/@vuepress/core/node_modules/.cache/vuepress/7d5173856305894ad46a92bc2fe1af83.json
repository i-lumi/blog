{"remainingRequest":"/Users/lumi/Documents/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lumi/Documents/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/layouts/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/layouts/Layout.vue","mtime":1598747287383},{"path":"/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js","mtime":1598747271180},{"path":"/Users/lumi/Documents/blog/node_modules/babel-loader/lib/index.js","mtime":1598747271163},{"path":"/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js","mtime":1598747271180},{"path":"/Users/lumi/Documents/blog/node_modules/vue-loader/lib/index.js","mtime":1598747271774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}