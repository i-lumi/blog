{"remainingRequest":"/Users/lumi/Documents/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lumi/Documents/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/components/ArticleInfo.vue?vue&type=template&id=424c3eec&scoped=true&","dependencies":[{"path":"/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/components/ArticleInfo.vue","mtime":1598747287383},{"path":"/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js","mtime":1598747271180},{"path":"/Users/lumi/Documents/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1598747271774},{"path":"/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js","mtime":1598747271180},{"path":"/Users/lumi/Documents/blog/node_modules/vue-loader/lib/index.js","mtime":1598747271774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}