{"remainingRequest":"/Users/lumi/Documents/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/util/postData.js","dependencies":[{"path":"/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/util/postData.js","mtime":1598747287383},{"path":"/Users/lumi/Documents/blog/node_modules/cache-loader/dist/cjs.js","mtime":1598747271180},{"path":"/Users/lumi/Documents/blog/node_modules/babel-loader/lib/index.js","mtime":1598747271163}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCB7IHR5cGUsIGNvbXBhcmVEYXRlLCBlbmNvZGVVcmwgfSBmcm9tICcuL2luZGV4JzsKLyoqDQogKiDov4fmu6TpnZ7mlofnq6DpobUNCiAqIEBwYXJhbSB7QXJyYXl9IHBvc3RzIOaJgOacieaWh+eroOaVsOaNrg0KICovCgpleHBvcnQgZnVuY3Rpb24gZmlsdGVyUG9zdHMocG9zdHMpIHsKICBwb3N0cyA9IHBvc3RzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgdmFyIF9pdGVtJGZyb250bWF0dGVyID0gaXRlbS5mcm9udG1hdHRlciwKICAgICAgICBwYWdlQ29tcG9uZW50ID0gX2l0ZW0kZnJvbnRtYXR0ZXIucGFnZUNvbXBvbmVudCwKICAgICAgICBhcnRpY2xlID0gX2l0ZW0kZnJvbnRtYXR0ZXIuYXJ0aWNsZSwKICAgICAgICBob21lID0gX2l0ZW0kZnJvbnRtYXR0ZXIuaG9tZTsKICAgIHJldHVybiAhKHBhZ2VDb21wb25lbnQgfHwgYXJ0aWNsZSA9PT0gZmFsc2UgfHwgaG9tZSA9PT0gdHJ1ZSk7IC8vIOWtmOWcqOmhtemdoue7hOS7tuOAgWFydGljbGXlrZfmrrXkuLpmYWxzZe+8jOS7peWPiummlumhtQogIH0pOwogIHJldHVybiBwb3N0czsKfQovKioNCiAqIOaMiee9rumhtuWSjOaXtumXtOaOkuW6jw0KICogQHBhcmFtIHtBcnJheX0gcG9zdHMg6L+H5ruk6Z2e5paH56ug6aG15LmL5ZCO55qE5paH56ug5pWw5o2uDQogKi8KCmV4cG9ydCBmdW5jdGlvbiBzb3J0UG9zdHMocG9zdHMpIHsKICBwb3N0cy5zb3J0KGZ1bmN0aW9uIChwcmV2LCBuZXh0KSB7CiAgICB2YXIgcHJldlN0aWNreSA9IHByZXYuZnJvbnRtYXR0ZXIuc3RpY2t5OwogICAgdmFyIG5leHRTdGlja3kgPSBuZXh0LmZyb250bWF0dGVyLnN0aWNreTsKCiAgICBpZiAocHJldlN0aWNreSAmJiBuZXh0U3RpY2t5KSB7CiAgICAgIHJldHVybiBwcmV2U3RpY2t5ID09IG5leHRTdGlja3kgPyBjb21wYXJlRGF0ZShwcmV2LCBuZXh0KSA6IHByZXZTdGlja3kgLSBuZXh0U3RpY2t5OwogICAgfSBlbHNlIGlmIChwcmV2U3RpY2t5ICYmICFuZXh0U3RpY2t5KSB7CiAgICAgIHJldHVybiAtMTsKICAgIH0gZWxzZSBpZiAoIXByZXZTdGlja3kgJiYgbmV4dFN0aWNreSkgewogICAgICByZXR1cm4gMTsKICAgIH0KCiAgICByZXR1cm4gY29tcGFyZURhdGUocHJldiwgbmV4dCk7CiAgfSk7CiAgcmV0dXJuIHBvc3RzOwp9Ci8qKg0KICog5oyJ5pe26Ze05o6S5bqPDQogKiBAcGFyYW0ge0FycmF5fSBwb3N0cyDov4fmu6TpnZ7mlofnq6DpobXkuYvlkI7nmoTmlofnq6DmlbDmja4NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHNvcnRQb3N0c0J5RGF0ZShwb3N0cykgewogIHBvc3RzLnNvcnQoZnVuY3Rpb24gKHByZXYsIG5leHQpIHsKICAgIHJldHVybiBjb21wYXJlRGF0ZShwcmV2LCBuZXh0KTsKICB9KTsKICByZXR1cm4gcG9zdHM7Cn0KLyoqDQogKiDmjInliIbnsbvlkozmoIfnrb7liIbnu4QNCiAqIEBwYXJhbSB7QXJyYXl9IHBvc3RzIOaMieaXtumXtOaOkuW6j+S5i+WQjueahOaWh+eroOaVsOaNrg0KICovCgpleHBvcnQgZnVuY3Rpb24gZ3JvdXBQb3N0cyhwb3N0cykgewogIHZhciBjYXRlZ29yaWVzT2JqID0ge307CiAgdmFyIHRhZ3NPYmogPSB7fTsKCiAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSwgcG9zdHNMKSB7CiAgICB2YXIgX3Bvc3RzJGkkZnJvbnRtYXR0ZXIgPSBwb3N0c1tpXS5mcm9udG1hdHRlciwKICAgICAgICBjYXRlZ29yaWVzID0gX3Bvc3RzJGkkZnJvbnRtYXR0ZXIuY2F0ZWdvcmllcywKICAgICAgICB0YWdzID0gX3Bvc3RzJGkkZnJvbnRtYXR0ZXIudGFnczsKCiAgICBpZiAodHlwZShjYXRlZ29yaWVzKSA9PT0gJ2FycmF5JykgewogICAgICBjYXRlZ29yaWVzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbSkgewogICAgICAgICAgLy8g5YiG57G75YC85piv5pyJ5pWI55qECiAgICAgICAgICB2YXIgZW5jb2RlSXRlbSA9IGVuY29kZVVybChpdGVtKTsKCiAgICAgICAgICBpZiAoIWNhdGVnb3JpZXNPYmpbZW5jb2RlSXRlbV0pIHsKICAgICAgICAgICAgY2F0ZWdvcmllc09ialtlbmNvZGVJdGVtXSA9IFtdOwogICAgICAgICAgfQoKICAgICAgICAgIGNhdGVnb3JpZXNPYmpbZW5jb2RlSXRlbV0ucHVzaChwb3N0c1tpXSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgICBpZiAodHlwZSh0YWdzKSA9PT0gJ2FycmF5JykgewogICAgICB0YWdzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbSkgewogICAgICAgICAgLy8g5qCH562+5YC85piv5pyJ5pWI55qECiAgICAgICAgICB2YXIgZW5jb2RlSXRlbSA9IGVuY29kZVVybChpdGVtKTsKCiAgICAgICAgICBpZiAoIXRhZ3NPYmpbZW5jb2RlSXRlbV0pIHsKICAgICAgICAgICAgdGFnc09ialtlbmNvZGVJdGVtXSA9IFtdOwogICAgICAgICAgfQoKICAgICAgICAgIHRhZ3NPYmpbZW5jb2RlSXRlbV0ucHVzaChwb3N0c1tpXSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9OwoKICBmb3IgKHZhciBpID0gMCwgcG9zdHNMID0gcG9zdHMubGVuZ3RoOyBpIDwgcG9zdHNMOyBpKyspIHsKICAgIF9sb29wKGksIHBvc3RzTCk7CiAgfQoKICByZXR1cm4gewogICAgY2F0ZWdvcmllczogY2F0ZWdvcmllc09iaiwKICAgIHRhZ3M6IHRhZ3NPYmoKICB9Owp9Ci8qKg0KICog6I635Y+W5omA5pyJ5YiG57G75ZKM5qCH562+DQogKiBAcGFyYW0ge09iamVjdH0gZ3JvdXBQb3N0cyDmjInliIbnsbvlkozmoIfnrb7liIbnu4TkuYvlkI7nmoTmlofnq6DmlbDmja4NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGNhdGVnb3JpZXNBbmRUYWdzKGdyb3VwUG9zdHMpIHsKICB2YXIgY2F0ZWdvcmllc0FyciA9IFtdOwogIHZhciB0YWdzQXJyID0gW107CgogIGZvciAodmFyIGtleSBpbiBncm91cFBvc3RzLmNhdGVnb3JpZXMpIHsKICAgIGNhdGVnb3JpZXNBcnIucHVzaCh7CiAgICAgIGtleToga2V5LAogICAgICBsZW5ndGg6IGdyb3VwUG9zdHMuY2F0ZWdvcmllc1trZXldLmxlbmd0aAogICAgfSk7CiAgfQoKICBmb3IgKHZhciBfa2V5IGluIGdyb3VwUG9zdHMudGFncykgewogICAgdGFnc0Fyci5wdXNoKHsKICAgICAga2V5OiBfa2V5LAogICAgICBsZW5ndGg6IGdyb3VwUG9zdHMudGFnc1tfa2V5XS5sZW5ndGgKICAgIH0pOwogIH0KCiAgcmV0dXJuIHsKICAgIGNhdGVnb3JpZXM6IGNhdGVnb3JpZXNBcnIsCiAgICB0YWdzOiB0YWdzQXJyCiAgfTsKfQ=="},{"version":3,"sources":["/Users/lumi/Documents/blog/node_modules/vuepress-theme-vdoing/util/postData.js"],"names":["type","compareDate","encodeUrl","filterPosts","posts","filter","item","frontmatter","pageComponent","article","home","sortPosts","sort","prev","next","prevSticky","sticky","nextSticky","sortPostsByDate","groupPosts","categoriesObj","tagsObj","i","postsL","categories","tags","forEach","encodeItem","push","length","categoriesAndTags","categoriesArr","tagsArr","key"],"mappings":"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","sourcesContent":["import { type, compareDate, encodeUrl } from './index'\r\n\r\n/**\r\n * 过滤非文章页\r\n * @param {Array} posts 所有文章数据\r\n */\r\nexport function filterPosts (posts) {\r\n  posts = posts.filter(item => {\r\n    const { frontmatter: { pageComponent, article, home }} = item\r\n    return !(pageComponent || article === false || home === true) // 存在页面组件、article字段为false，以及首页\r\n  })\r\n  return posts\r\n}\r\n\r\n/**\r\n * 按置顶和时间排序\r\n * @param {Array} posts 过滤非文章页之后的文章数据\r\n */\r\nexport function sortPosts (posts) {\r\n  posts.sort((prev, next) => {\r\n    const prevSticky = prev.frontmatter.sticky\r\n    const nextSticky = next.frontmatter.sticky\r\n    if (prevSticky && nextSticky) {\r\n      return prevSticky == nextSticky ? compareDate(prev, next) : (prevSticky - nextSticky)\r\n    } else if (prevSticky && !nextSticky) {\r\n      return -1\r\n    } else if (!prevSticky && nextSticky) {\r\n      return 1\r\n    }\r\n    return compareDate(prev, next)\r\n  })\r\n  return posts\r\n}\r\n\r\n/**\r\n * 按时间排序\r\n * @param {Array} posts 过滤非文章页之后的文章数据\r\n */\r\nexport function sortPostsByDate (posts) {\r\n  posts.sort((prev, next) => {\r\n    return compareDate(prev, next)\r\n  })\r\n  return posts\r\n}\r\n\r\n/**\r\n * 按分类和标签分组\r\n * @param {Array} posts 按时间排序之后的文章数据\r\n */\r\nexport function groupPosts(posts) {\r\n  const categoriesObj = {}\r\n  const tagsObj = {}\r\n\r\n  for (let i = 0, postsL = posts.length; i < postsL; i++) {\r\n    const { frontmatter: { categories, tags }} = posts[i]\r\n    if (type(categories) === 'array') {\r\n      categories.forEach(item => {\r\n        if (item) { // 分类值是有效的\r\n          const encodeItem = encodeUrl(item)\r\n          if (!categoriesObj[encodeItem]) {\r\n            categoriesObj[encodeItem] = []\r\n          }\r\n          categoriesObj[encodeItem].push(posts[i])\r\n        }\r\n      })\r\n    }\r\n    if (type(tags) === 'array') {\r\n      tags.forEach(item => {\r\n        if (item) { // 标签值是有效的\r\n          const encodeItem = encodeUrl(item)\r\n          if (!tagsObj[encodeItem]) {\r\n            tagsObj[encodeItem] = []\r\n          }\r\n          tagsObj[encodeItem].push(posts[i])\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return {\r\n    categories: categoriesObj,\r\n    tags: tagsObj\r\n  }\r\n}\r\n\r\n/**\r\n * 获取所有分类和标签\r\n * @param {Object} groupPosts 按分类和标签分组之后的文章数据\r\n */\r\nexport function categoriesAndTags(groupPosts) {\r\n  const categoriesArr = []\r\n  const tagsArr = []\r\n\r\n  for(let key in groupPosts.categories) {\r\n    categoriesArr.push({\r\n      key,\r\n      length: groupPosts.categories[key].length\r\n    })\r\n  }\r\n\r\n  for(let key in groupPosts.tags) {\r\n    tagsArr.push({\r\n      key,\r\n      length: groupPosts.tags[key].length\r\n    })\r\n  }\r\n  return {\r\n    categories: categoriesArr,\r\n    tags: tagsArr\r\n  }\r\n}\r\n"]}]}